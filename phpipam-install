#!/bin/bash

# Color codes
GREEN="\033[0;32m"
YELLOW="\033[1;33m"
RED="\033[0;31m"
NC="\033[0m" # No Color

# Redirect all output except for script messages
exec 3>&1

# Function to detect OS
detect_os() {
    echo -e "${YELLOW}Detecting operating system...${NC}" >&3
    if [ -f /etc/os-release ]; then
        . /etc/os-release
        OS=$ID
        VERSION=$VERSION_ID
        echo -e "${GREEN}OS detected: $OS $VERSION${NC}" >&3
    else
        echo -e "${RED}Unsupported operating system.${NC}" >&3
        exit 1
    fi
}

# Function to prompt for cleanup and reinstallation
prompt_cleanup() {
    read -p "Do you want to clean up existing services and start fresh? (y/n): " CLEANUP >&3
    if [[ "$CLEANUP" =~ ^[Yy]$ ]]; then
        echo -e "${YELLOW}Cleaning up existing web servers and unnecessary services...${NC}" >&3
        if [[ "$OS" == "ubuntu" ]]; then
            sudo apt purge -y apache2 nginx php* mariadb* mysql* || true
            sudo apt autoremove -y || true
        elif [[ "$OS" == "centos" || "$OS" == "rhel" ]]; then
            sudo yum remove -y httpd nginx php* mariadb* mysql* || true
            sudo yum autoremove -y || true
        fi
        echo -e "${GREEN}Cleanup completed. Starting fresh installation.${NC}" >&3
    else
        echo -e "${YELLOW}Skipping cleanup. Continuing with installation.${NC}" >&3
    fi
}

# Function to prompt for web server selection
prompt_web_server() {
    echo -e "${YELLOW}Select the web server to install:${NC}" >&3
    echo "1) Nginx" >&3
    echo "2) Apache" >&3
    read -p "Enter your choice (1/2): " WEB_SERVER_CHOICE >&3
    if [[ "$WEB_SERVER_CHOICE" == "1" ]]; then
        WEB_SERVER="nginx"
    elif [[ "$WEB_SERVER_CHOICE" == "2" ]]; then
        WEB_SERVER="apache"
    else
        echo -e "${RED}Invalid choice. Exiting.${NC}" >&3
        exit 1
    fi
}
# Function to prompt for database details
prompt_database_details() {
    echo -e "${YELLOW}Please provide database details:${NC}" >&3

    read -p "Enter the database name (default: phpipam): " DB_NAME_INPUT >&3
    DB_NAME=${DB_NAME_INPUT:-phpipam}

    read -p "Enter the database user (default: phpipam): " DB_USER_INPUT >&3
    DB_USER=${DB_USER_INPUT:-phpipam}

    read -sp "Enter the database password (default: phpipamadmin): " DB_PASS_INPUT >&3
    echo "" >&3
    DB_PASS=${DB_PASS_INPUT:-phpipamadmin}

    echo -e "${GREEN}Database details set: Name=$DB_NAME, User=$DB_USER.${NC}" >&3
}

# Function to install prerequisites
install_prerequisites() {
    if [[ "$WEB_SERVER" == "nginx" ]]; then
        echo -e "${YELLOW}Installing prerequisites for Nginx...${NC}" >&3
        if [[ "$OS" == "ubuntu" ]]; then
            sudo apt update && sudo apt install -y nginx mariadb-server php-fpm php-mysql php-pear php-snmp php-gmp php-curl php-ldap php-mbstring php-intl php-xml git unzip
        elif [[ "$OS" == "centos" || "$OS" == "rhel" ]]; then
            sudo yum install -y epel-release
            sudo yum install -y nginx mariadb-server php php-mysqlnd php-pear php-snmp php-gmp php-curl php-ldap php-mbstring php-intl php-xml git unzip
        fi
        echo -e "${GREEN}Nginx prerequisites installed successfully.${NC}" >&3
    elif [[ "$WEB_SERVER" == "apache" ]]; then
        echo -e "${YELLOW}Installing prerequisites for Apache...${NC}" >&3
        if [[ "$OS" == "ubuntu" ]]; then
            sudo apt update && sudo apt install -y apache2 mariadb-server php libapache2-mod-php php-mysql php-pear php-snmp php-gmp php-curl php-ldap php-mbstring php-intl php-xml git unzip
        elif [[ "$OS" == "centos" || "$OS" == "rhel" ]]; then
            sudo yum install -y httpd mariadb-server php php-mysqlnd php-pear php-snmp php-gmp php-curl php-ldap php-mbstring php-intl php-xml git unzip
        fi
        echo -e "${GREEN}Apache prerequisites installed successfully.${NC}" >&3
    fi
}

# Function to configure MariaDB
configure_mariadb() {
    echo -e "${YELLOW}Configuring MariaDB...${NC}" >&3
    sudo systemctl enable mariadb
    sudo systemctl start mariadb

    sudo mysql -e "CREATE DATABASE IF NOT EXISTS \`$DB_NAME\`;"
    sudo mysql -e "CREATE USER IF NOT EXISTS '$DB_USER'@'localhost' IDENTIFIED BY '$DB_PASS';"
    sudo mysql -e "GRANT ALL PRIVILEGES ON \`$DB_NAME\`.* TO '$DB_USER'@'localhost';"
    sudo mysql -e "FLUSH PRIVILEGES;"
    sudo mysql -e "SET FOREIGN_KEY_CHECKS = 0;"
    sudo mysql -e "DROP DATABASE phpipam;"
    sudo mysql -e "CREATE DATABASE phpipam;"
    sudo mysql -e "SET FOREIGN_KEY_CHECKS = 1;"

    echo -e "${GREEN}MariaDB configured successfully.${NC}" >&3
}

# Function to download and configure phpIPAM
download_phpipam() {
    echo -e "${YELLOW}Downloading phpIPAM...${NC}" >&3
    if [[ -d "/var/www/phpipam" ]]; then
        sudo rm -rf /var/www/phpipam
    fi

    sudo git clone --depth 1 https://github.com/phpipam/phpipam.git /var/www/phpipam
    sudo chown -R www-data:www-data /var/www/phpipam
    sudo chmod -R 755 /var/www/phpipam

    sudo cp /var/www/phpipam/config.dist.php /var/www/phpipam/config.php
    sudo sed -i "s/'phpipamuser';/'$DB_USER';/" /var/www/phpipam/config.php
    sudo sed -i "s/'phpipampassword';/'$DB_PASS';/" /var/www/phpipam/config.php
    mysql -u root -p phpipam < /var/www/phpipam/db/SCHEMA.sql
    echo -e "${GREEN}phpIPAM downloaded and configured successfully.${NC}" >&3
}

# Function to display summary
display_summary() {
    IP=$(hostname -I | awk '{print $1}')
    WEB_SERVER_VERSION=$(nginx -v 2>&1 | grep version || httpd -v 2>&1 | grep version)
    DB_SERVER_VERSION=$(mysql --version)

    printf "\n${GREEN}Installation Summary:${NC}\n"
    printf "==============================================\n"
    printf "| %-20s | %-25s |\n" "Parameter" "Value"
    printf "==============================================\n"
    printf "| %-20s | %-25s |\n" "OS and Version" "$OS $VERSION"
    printf "| %-20s | %-25s |\n" "Web Server" "$WEB_SERVER"
    printf "| %-20s | %-25s |\n" "Web Server Version" "${WEB_SERVER_VERSION:0:25}"
    printf "| %-20s | %-25s |\n" "Database Server" "MariaDB"
    printf "| %-20s | %-25s |\n" "DB Server Version" "${DB_SERVER_VERSION:0:25}"
    printf "| %-20s | %-25s |\n" "Database Name" "$DB_NAME"
    printf "| %-20s | %-25s |\n" "Database User" "$DB_USER"
    printf "| %-20s | %-25s |\n" "Database Password" "$DB_PASS"
    printf "| %-20s | %-25s |\n" "Server IP Address" "http://""$IP"
    printf "==============================================\n"
    printf "\nFor more details, visit the repository: https://github.com/rzatkv/phpipam-auto-install\n"
}

# Main script execution
detect_os
prompt_cleanup
prompt_web_server
prompt_database_details
install_prerequisites
configure_mariadb
download_phpipam
display_summary
